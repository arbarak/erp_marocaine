# Generated by Django 5.0.1 on 2025-10-02 22:32

import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'Code must contain only digits')], verbose_name='code')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('name_arabic', models.CharField(blank=True, max_length=100, verbose_name='name (Arabic)')),
                ('category', models.CharField(choices=[('ASSET', 'Asset'), ('LIABILITY', 'Liability'), ('EQUITY', 'Equity'), ('REVENUE', 'Revenue'), ('EXPENSE', 'Expense')], max_length=10, verbose_name='category')),
                ('normal_balance', models.CharField(choices=[('DEBIT', 'Debit'), ('CREDIT', 'Credit')], max_length=6, verbose_name='normal balance')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='level')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('allow_posting', models.BooleanField(default=True, verbose_name='allow posting')),
                ('require_reconciliation', models.BooleanField(default=False, verbose_name='require reconciliation')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_account_types', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='accounting.accounttype', verbose_name='parent account type')),
            ],
            options={
                'verbose_name': 'Account Type',
                'verbose_name_plural': 'Account Types',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9A-Z\\-\\.]+$', 'Invalid account code format')], verbose_name='account code')),
                ('name', models.CharField(max_length=150, verbose_name='account name')),
                ('name_arabic', models.CharField(blank=True, max_length=150, verbose_name='account name (Arabic)')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='level')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('allow_posting', models.BooleanField(default=True, verbose_name='allow posting')),
                ('require_reconciliation', models.BooleanField(default=False, verbose_name='require reconciliation')),
                ('currency', models.CharField(default='MAD', max_length=3, verbose_name='currency')),
                ('opening_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='opening balance')),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='current balance')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('external_code', models.CharField(blank=True, help_text='External system account code', max_length=50, verbose_name='external code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_accounts', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='accounting.account', verbose_name='parent account')),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.accounttype', verbose_name='account type')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAccount',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('code', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9A-Z\\-\\.]+$', 'Invalid account code format')], verbose_name='account code')),
                ('name', models.CharField(max_length=150, verbose_name='account name')),
                ('name_arabic', models.CharField(blank=True, max_length=150, verbose_name='account name (Arabic)')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='level')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('allow_posting', models.BooleanField(default=True, verbose_name='allow posting')),
                ('require_reconciliation', models.BooleanField(default=False, verbose_name='require reconciliation')),
                ('currency', models.CharField(default='MAD', max_length=3, verbose_name='currency')),
                ('opening_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='opening balance')),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='current balance')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('external_code', models.CharField(blank=True, help_text='External system account code', max_length=50, verbose_name='external code')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('account_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.accounttype', verbose_name='account type')),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.account', verbose_name='parent account')),
            ],
            options={
                'verbose_name': 'historical Account',
                'verbose_name_plural': 'historical Accounts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAccountType',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'Code must contain only digits')], verbose_name='code')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('name_arabic', models.CharField(blank=True, max_length=100, verbose_name='name (Arabic)')),
                ('category', models.CharField(choices=[('ASSET', 'Asset'), ('LIABILITY', 'Liability'), ('EQUITY', 'Equity'), ('REVENUE', 'Revenue'), ('EXPENSE', 'Expense')], max_length=10, verbose_name='category')),
                ('normal_balance', models.CharField(choices=[('DEBIT', 'Debit'), ('CREDIT', 'Credit')], max_length=6, verbose_name='normal balance')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='level')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('allow_posting', models.BooleanField(default=True, verbose_name='allow posting')),
                ('require_reconciliation', models.BooleanField(default=False, verbose_name='require reconciliation')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.accounttype', verbose_name='parent account type')),
            ],
            options={
                'verbose_name': 'historical Account Type',
                'verbose_name_plural': 'historical Account Types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalJournal',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('code', models.CharField(max_length=10, verbose_name='journal code')),
                ('name', models.CharField(max_length=100, verbose_name='journal name')),
                ('journal_type', models.CharField(choices=[('GENERAL', 'General Journal'), ('SALES', 'Sales Journal'), ('PURCHASES', 'Purchases Journal'), ('CASH_RECEIPTS', 'Cash Receipts Journal'), ('CASH_PAYMENTS', 'Cash Payments Journal'), ('BANK', 'Bank Journal'), ('INVENTORY', 'Inventory Journal'), ('PAYROLL', 'Payroll Journal'), ('ADJUSTING', 'Adjusting Entries Journal'), ('CLOSING', 'Closing Entries Journal')], default='GENERAL', max_length=15, verbose_name='journal type')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('auto_sequence', models.BooleanField(default=True, verbose_name='auto sequence')),
                ('sequence_prefix', models.CharField(blank=True, max_length=10, verbose_name='sequence prefix')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('default_credit_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.account', verbose_name='default credit account')),
                ('default_debit_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.account', verbose_name='default debit account')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Journal',
                'verbose_name_plural': 'historical Journals',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, verbose_name='journal code')),
                ('name', models.CharField(max_length=100, verbose_name='journal name')),
                ('journal_type', models.CharField(choices=[('GENERAL', 'General Journal'), ('SALES', 'Sales Journal'), ('PURCHASES', 'Purchases Journal'), ('CASH_RECEIPTS', 'Cash Receipts Journal'), ('CASH_PAYMENTS', 'Cash Payments Journal'), ('BANK', 'Bank Journal'), ('INVENTORY', 'Inventory Journal'), ('PAYROLL', 'Payroll Journal'), ('ADJUSTING', 'Adjusting Entries Journal'), ('CLOSING', 'Closing Entries Journal')], default='GENERAL', max_length=15, verbose_name='journal type')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('auto_sequence', models.BooleanField(default=True, verbose_name='auto sequence')),
                ('sequence_prefix', models.CharField(blank=True, max_length=10, verbose_name='sequence prefix')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_journals', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('default_credit_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journals_as_default_credit', to='accounting.account', verbose_name='default credit account')),
                ('default_debit_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journals_as_default_debit', to='accounting.account', verbose_name='default debit account')),
            ],
            options={
                'verbose_name': 'Journal',
                'verbose_name_plural': 'Journals',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entry_number', models.CharField(max_length=50, unique=True, verbose_name='entry number')),
                ('date', models.DateField(verbose_name='date')),
                ('entry_type', models.CharField(choices=[('MANUAL', 'Manual Entry'), ('AUTOMATIC', 'Automatic Entry'), ('ADJUSTING', 'Adjusting Entry'), ('CLOSING', 'Closing Entry'), ('REVERSAL', 'Reversal Entry')], default='MANUAL', max_length=10, verbose_name='entry type')),
                ('state', models.CharField(choices=[('DRAFT', 'Draft'), ('POSTED', 'Posted'), ('REVERSED', 'Reversed'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=10, verbose_name='state')),
                ('total_debit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='total debit')),
                ('total_credit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='total credit')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='reference')),
                ('description', models.TextField(verbose_name='description')),
                ('source_document_type', models.CharField(blank=True, max_length=50, verbose_name='source document type')),
                ('source_document_id', models.CharField(blank=True, max_length=50, verbose_name='source document ID')),
                ('reversal_reason', models.TextField(blank=True, verbose_name='reversal reason')),
                ('posted_at', models.DateTimeField(blank=True, null=True, verbose_name='posted at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_journal_entries', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.journal', verbose_name='journal')),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='posted_journal_entries', to=settings.AUTH_USER_MODEL, verbose_name='posted by')),
                ('reversed_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reversal_entries', to='accounting.journalentry', verbose_name='reversed entry')),
            ],
            options={
                'verbose_name': 'Journal Entry',
                'verbose_name_plural': 'Journal Entries',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalJournalEntry',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('entry_number', models.CharField(db_index=True, max_length=50, verbose_name='entry number')),
                ('date', models.DateField(verbose_name='date')),
                ('entry_type', models.CharField(choices=[('MANUAL', 'Manual Entry'), ('AUTOMATIC', 'Automatic Entry'), ('ADJUSTING', 'Adjusting Entry'), ('CLOSING', 'Closing Entry'), ('REVERSAL', 'Reversal Entry')], default='MANUAL', max_length=10, verbose_name='entry type')),
                ('state', models.CharField(choices=[('DRAFT', 'Draft'), ('POSTED', 'Posted'), ('REVERSED', 'Reversed'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=10, verbose_name='state')),
                ('total_debit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='total debit')),
                ('total_credit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='total credit')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='reference')),
                ('description', models.TextField(verbose_name='description')),
                ('source_document_type', models.CharField(blank=True, max_length=50, verbose_name='source document type')),
                ('source_document_id', models.CharField(blank=True, max_length=50, verbose_name='source document ID')),
                ('reversal_reason', models.TextField(blank=True, verbose_name='reversal reason')),
                ('posted_at', models.DateTimeField(blank=True, null=True, verbose_name='posted at')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('posted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='posted by')),
                ('journal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.journal', verbose_name='journal')),
                ('reversed_entry', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounting.journalentry', verbose_name='reversed entry')),
            ],
            options={
                'verbose_name': 'historical Journal Entry',
                'verbose_name_plural': 'historical Journal Entries',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='JournalEntryLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sequence', models.PositiveIntegerField(default=1, verbose_name='sequence')),
                ('description', models.CharField(max_length=200, verbose_name='description')),
                ('debit_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='debit amount')),
                ('credit_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='credit amount')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='reference')),
                ('reconciled', models.BooleanField(default=False, verbose_name='reconciled')),
                ('reconciled_at', models.DateTimeField(blank=True, null=True, verbose_name='reconciled at')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.account', verbose_name='account')),
                ('journal_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='accounting.journalentry', verbose_name='journal entry')),
                ('reconciled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reconciled_journal_lines', to=settings.AUTH_USER_MODEL, verbose_name='reconciled by')),
            ],
            options={
                'verbose_name': 'Journal Entry Line',
                'verbose_name_plural': 'Journal Entry Lines',
                'ordering': ['journal_entry', 'sequence'],
            },
        ),
        migrations.AddIndex(
            model_name='accounttype',
            index=models.Index(fields=['company', 'category'], name='accounting__company_565d55_idx'),
        ),
        migrations.AddIndex(
            model_name='accounttype',
            index=models.Index(fields=['company', 'is_active'], name='accounting__company_002d2c_idx'),
        ),
        migrations.AddIndex(
            model_name='accounttype',
            index=models.Index(fields=['parent'], name='accounting__parent__fa7f66_idx'),
        ),
        migrations.AddIndex(
            model_name='accounttype',
            index=models.Index(fields=['level'], name='accounting__level_e3a4a1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='accounttype',
            unique_together={('company', 'code')},
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['company', 'account_type'], name='accounting__company_ee9541_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['company', 'is_active'], name='accounting__company_e85481_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['parent'], name='accounting__parent__da6035_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['level'], name='accounting__level_de1f8b_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['code'], name='accounting__code_c93a8f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together={('company', 'code')},
        ),
        migrations.AddIndex(
            model_name='journal',
            index=models.Index(fields=['company', 'journal_type'], name='accounting__company_757974_idx'),
        ),
        migrations.AddIndex(
            model_name='journal',
            index=models.Index(fields=['company', 'is_active'], name='accounting__company_52ae67_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='journal',
            unique_together={('company', 'code')},
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['company', 'journal', 'state'], name='accounting__company_319e80_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['company', 'date', 'state'], name='accounting__company_115838_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['state'], name='accounting__state_b7c839_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['date'], name='accounting__date_e3f521_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['source_document_type', 'source_document_id'], name='accounting__source__64be40_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='journalentry',
            unique_together={('company', 'entry_number')},
        ),
        migrations.AddIndex(
            model_name='journalentryline',
            index=models.Index(fields=['journal_entry', 'sequence'], name='accounting__journal_93f384_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentryline',
            index=models.Index(fields=['account'], name='accounting__account_6fdc67_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentryline',
            index=models.Index(fields=['reconciled'], name='accounting__reconci_a911dd_idx'),
        ),
    ]
