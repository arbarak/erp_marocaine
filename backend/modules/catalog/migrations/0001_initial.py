# Generated by Django 5.0.1 on 2025-10-05 06:04

import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('internal_reference', models.CharField(help_text='Internal product code/SKU', max_length=50, verbose_name='internal reference')),
                ('barcode', models.CharField(blank=True, help_text='Product barcode (EAN13, UPC, etc.)', max_length=50, verbose_name='barcode')),
                ('product_type', models.CharField(choices=[('PRODUCT', 'Stockable Product'), ('SERVICE', 'Service'), ('CONSUMABLE', 'Consumable')], default='PRODUCT', max_length=15, verbose_name='product type')),
                ('list_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='list price')),
                ('cost_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='cost price')),
                ('track_inventory', models.BooleanField(default=True, help_text='Whether to track inventory for this product', verbose_name='track inventory')),
                ('image', models.ImageField(blank=True, upload_to='products/', verbose_name='image')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('can_be_sold', models.BooleanField(default=True, verbose_name='can be sold')),
                ('can_be_purchased', models.BooleanField(default=True, verbose_name='can be purchased')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('symbol', models.CharField(max_length=10, verbose_name='symbol')),
                ('type', models.CharField(choices=[('UNIT', 'Unit'), ('WEIGHT', 'Weight'), ('VOLUME', 'Volume'), ('LENGTH', 'Length'), ('AREA', 'Area'), ('TIME', 'Time')], max_length=10, verbose_name='type')),
                ('conversion_factor', models.DecimalField(decimal_places=6, default=Decimal('1.000000'), help_text='Factor to convert to base unit', max_digits=12, verbose_name='conversion factor')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('rounding_precision', models.PositiveIntegerField(default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)], verbose_name='rounding precision')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Unit of Measure',
                'verbose_name_plural': 'Units of Measure',
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('code', models.CharField(help_text='Unique code for this category', max_length=20, verbose_name='code')),
                ('image', models.ImageField(blank=True, upload_to='categories/', verbose_name='image')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='sort order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='companies.company', verbose_name='company')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalog.category', verbose_name='parent category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalCategory',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('code', models.CharField(help_text='Unique code for this category', max_length=20, verbose_name='code')),
                ('image', models.TextField(blank=True, max_length=100, verbose_name='image')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='sort order')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalog.category', verbose_name='parent category')),
            ],
            options={
                'verbose_name': 'historical Category',
                'verbose_name_plural': 'historical Categories',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProduct',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('internal_reference', models.CharField(help_text='Internal product code/SKU', max_length=50, verbose_name='internal reference')),
                ('barcode', models.CharField(blank=True, help_text='Product barcode (EAN13, UPC, etc.)', max_length=50, verbose_name='barcode')),
                ('product_type', models.CharField(choices=[('PRODUCT', 'Stockable Product'), ('SERVICE', 'Service'), ('CONSUMABLE', 'Consumable')], default='PRODUCT', max_length=15, verbose_name='product type')),
                ('list_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='list price')),
                ('cost_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='cost price')),
                ('track_inventory', models.BooleanField(default=True, help_text='Whether to track inventory for this product', verbose_name='track inventory')),
                ('image', models.TextField(blank=True, max_length=100, verbose_name='image')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('can_be_sold', models.BooleanField(default=True, verbose_name='can be sold')),
                ('can_be_purchased', models.BooleanField(default=True, verbose_name='can be purchased')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalog.category', verbose_name='category')),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Product',
                'verbose_name_plural': 'historical Products',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
