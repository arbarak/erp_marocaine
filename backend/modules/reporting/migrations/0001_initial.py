# Generated by Django 5.0.1 on 2025-10-05 06:04

import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalDashboard',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('layout_config', models.JSONField(default=dict, help_text='Dashboard layout and widget configuration', verbose_name='layout configuration')),
                ('refresh_interval', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(60)], verbose_name='refresh interval (seconds)')),
                ('is_default', models.BooleanField(default=False, verbose_name='is default dashboard')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Dashboard',
                'verbose_name_plural': 'historical Dashboards',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReportTemplate',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('report_type', models.CharField(choices=[('FINANCIAL', 'Financial Report'), ('TAX', 'Tax Report'), ('MANAGEMENT', 'Management Report'), ('COMPLIANCE', 'Compliance Report'), ('ANALYTICS', 'Analytics Report')], max_length=20, verbose_name='report type')),
                ('template_config', models.JSONField(default=dict, help_text='JSON configuration for report generation', verbose_name='template configuration')),
                ('default_format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], default='PDF', max_length=10, verbose_name='default format')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this template is available to all users', verbose_name='is public')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Report Template',
                'verbose_name_plural': 'historical Report Templates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('report_type', models.CharField(choices=[('FINANCIAL', 'Financial Report'), ('TAX', 'Tax Report'), ('MANAGEMENT', 'Management Report'), ('COMPLIANCE', 'Compliance Report'), ('ANALYTICS', 'Analytics Report')], max_length=20, verbose_name='report type')),
                ('template_config', models.JSONField(default=dict, help_text='JSON configuration for report generation', verbose_name='template configuration')),
                ('default_format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], default='PDF', max_length=10, verbose_name='default format')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this template is available to all users', verbose_name='is public')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='allowed_report_templates', to=settings.AUTH_USER_MODEL, verbose_name='allowed users')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_templates', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_report_templates', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
            },
        ),
        migrations.CreateModel(
            name='ReportExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='execution name')),
                ('parameters', models.JSONField(default=dict, help_text='Parameters used for report generation', verbose_name='parameters')),
                ('format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], max_length=10, verbose_name='format')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20, verbose_name='status')),
                ('progress', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='progress percentage')),
                ('file_path', models.CharField(blank=True, help_text='Path to generated report file', max_length=500, verbose_name='file path')),
                ('file_size', models.BigIntegerField(blank=True, null=True, verbose_name='file size (bytes)')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='started at')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_executions', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='report_executions', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='reporting.reporttemplate', verbose_name='template')),
            ],
            options={
                'verbose_name': 'Report Execution',
                'verbose_name_plural': 'Report Executions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalReportExecution',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=200, verbose_name='execution name')),
                ('parameters', models.JSONField(default=dict, help_text='Parameters used for report generation', verbose_name='parameters')),
                ('format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], max_length=10, verbose_name='format')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20, verbose_name='status')),
                ('progress', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='progress percentage')),
                ('file_path', models.CharField(blank=True, help_text='Path to generated report file', max_length=500, verbose_name='file path')),
                ('file_size', models.BigIntegerField(blank=True, null=True, verbose_name='file size (bytes)')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='started at')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reporting.reporttemplate', verbose_name='template')),
            ],
            options={
                'verbose_name': 'historical Report Execution',
                'verbose_name_plural': 'historical Report Executions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('VIEW', 'View'), ('EXPORT', 'Export'), ('IMPORT', 'Import'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('SYSTEM', 'System Event')], max_length=20, verbose_name='action type')),
                ('description', models.TextField(verbose_name='description')),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('session_key', models.CharField(blank=True, max_length=40, verbose_name='session key')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('old_values', models.JSONField(blank=True, help_text='Previous values before change', null=True, verbose_name='old values')),
                ('new_values', models.JSONField(blank=True, help_text='New values after change', null=True, verbose_name='new values')),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=20, verbose_name='severity')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='companies.company', verbose_name='company')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='content type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['company', 'timestamp'], name='reporting_a_company_1be0be_idx'), models.Index(fields=['user', 'timestamp'], name='reporting_a_user_id_327d7c_idx'), models.Index(fields=['action_type', 'timestamp'], name='reporting_a_action__01bbaf_idx'), models.Index(fields=['content_type', 'object_id'], name='reporting_a_content_426b88_idx'), models.Index(fields=['severity'], name='reporting_a_severit_4343c9_idx')],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('layout_config', models.JSONField(default=dict, help_text='Dashboard layout and widget configuration', verbose_name='layout configuration')),
                ('refresh_interval', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(60)], verbose_name='refresh interval (seconds)')),
                ('is_default', models.BooleanField(default=False, verbose_name='is default dashboard')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='allowed_dashboards', to=settings.AUTH_USER_MODEL, verbose_name='allowed users')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboards', to='companies.company', verbose_name='company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_dashboards', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'Dashboard',
                'verbose_name_plural': 'Dashboards',
                'indexes': [models.Index(fields=['company', 'is_active'], name='reporting_d_company_5fba9e_idx'), models.Index(fields=['is_default'], name='reporting_d_is_defa_bcbd98_idx')],
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['company', 'report_type'], name='reporting_r_company_779999_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['company', 'is_active'], name='reporting_r_company_45bc49_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['is_public'], name='reporting_r_is_publ_c6be3f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reporttemplate',
            unique_together={('company', 'name')},
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['company', 'template', 'status'], name='reporting_r_company_ee6d7a_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['company', 'created_at'], name='reporting_r_company_d896d6_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['status'], name='reporting_r_status_ad94a2_idx'),
        ),
        migrations.AddIndex(
            model_name='reportexecution',
            index=models.Index(fields=['created_by'], name='reporting_r_created_2d8606_idx'),
        ),
    ]
