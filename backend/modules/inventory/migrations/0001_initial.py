# Generated by Django 5.0.1 on 2025-10-05 06:04

import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalWarehouse',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(help_text='Unique warehouse code', max_length=20, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('address_line1', models.CharField(blank=True, max_length=200, verbose_name='address line 1')),
                ('address_line2', models.CharField(blank=True, max_length=200, verbose_name='address line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('state_province', models.CharField(blank=True, max_length=100, verbose_name='state/province')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_default', models.BooleanField(default=False, help_text='Default warehouse for this company', verbose_name='is default')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Warehouse',
                'verbose_name_plural': 'historical Warehouses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(help_text='Location code (e.g., A-01-01)', max_length=30, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('barcode', models.CharField(blank=True, max_length=50, verbose_name='barcode')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_scrap_location', models.BooleanField(default=False, help_text='Location for scrapped/damaged goods', verbose_name='is scrap location')),
                ('is_return_location', models.BooleanField(default=False, help_text='Location for returned goods', verbose_name='is return location')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='inventory.location', verbose_name='parent location')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['warehouse', 'code'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalStockMove',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100, verbose_name='reference')),
                ('move_type', models.CharField(choices=[('IN', 'Incoming'), ('OUT', 'Outgoing'), ('INTERNAL', 'Internal Transfer'), ('ADJUSTMENT', 'Inventory Adjustment')], max_length=15, verbose_name='move type')),
                ('state', models.CharField(choices=[('DRAFT', 'Draft'), ('CONFIRMED', 'Confirmed'), ('ASSIGNED', 'Assigned'), ('DONE', 'Done'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=15, verbose_name='state')),
                ('scheduled_date', models.DateTimeField(verbose_name='scheduled date')),
                ('effective_date', models.DateTimeField(blank=True, null=True, verbose_name='effective date')),
                ('origin_document', models.CharField(blank=True, max_length=100, verbose_name='origin document')),
                ('origin_reference', models.CharField(blank=True, max_length=100, verbose_name='origin reference')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='companies.company', verbose_name='company')),
                ('confirmed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='confirmed by')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('destination_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location', verbose_name='destination location')),
                ('source_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location', verbose_name='source location')),
            ],
            options={
                'verbose_name': 'historical Stock Move',
                'verbose_name_plural': 'historical Stock Moves',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(max_length=20, verbose_name='code')),
                ('usage', models.CharField(choices=[('INTERNAL', 'Internal Location'), ('CUSTOMER', 'Customer Location'), ('SUPPLIER', 'Supplier Location'), ('INVENTORY', 'Inventory Loss'), ('PRODUCTION', 'Production'), ('TRANSIT', 'Transit Location')], default='INTERNAL', max_length=15, verbose_name='usage')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_types', to='companies.company', verbose_name='company')),
            ],
            options={
                'verbose_name': 'Location Type',
                'verbose_name_plural': 'Location Types',
                'ordering': ['name'],
                'unique_together': {('company', 'code')},
            },
        ),
        migrations.AddField(
            model_name='location',
            name='location_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='locations', to='inventory.locationtype', verbose_name='location type'),
        ),
        migrations.CreateModel(
            name='StockMove',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='reference')),
                ('move_type', models.CharField(choices=[('IN', 'Incoming'), ('OUT', 'Outgoing'), ('INTERNAL', 'Internal Transfer'), ('ADJUSTMENT', 'Inventory Adjustment')], max_length=15, verbose_name='move type')),
                ('state', models.CharField(choices=[('DRAFT', 'Draft'), ('CONFIRMED', 'Confirmed'), ('ASSIGNED', 'Assigned'), ('DONE', 'Done'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=15, verbose_name='state')),
                ('scheduled_date', models.DateTimeField(verbose_name='scheduled date')),
                ('effective_date', models.DateTimeField(blank=True, null=True, verbose_name='effective date')),
                ('origin_document', models.CharField(blank=True, max_length=100, verbose_name='origin document')),
                ('origin_reference', models.CharField(blank=True, max_length=100, verbose_name='origin reference')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_moves', to='companies.company', verbose_name='company')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='confirmed_stock_moves', to=settings.AUTH_USER_MODEL, verbose_name='confirmed by')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_stock_moves', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('destination_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incoming_moves', to='inventory.location', verbose_name='destination location')),
                ('source_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outgoing_moves', to='inventory.location', verbose_name='source location')),
            ],
            options={
                'verbose_name': 'Stock Move',
                'verbose_name_plural': 'Stock Moves',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockMoveLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity_planned', models.DecimalField(decimal_places=6, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.000001'))], verbose_name='planned quantity')),
                ('quantity_done', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='done quantity')),
                ('unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='unit cost')),
                ('lot_number', models.CharField(blank=True, max_length=50, verbose_name='lot number')),
                ('serial_number', models.CharField(blank=True, max_length=50, verbose_name='serial number')),
                ('state', models.CharField(choices=[('DRAFT', 'Draft'), ('CONFIRMED', 'Confirmed'), ('ASSIGNED', 'Assigned'), ('DONE', 'Done'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=15, verbose_name='state')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('move', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='inventory.stockmove', verbose_name='stock move')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_move_lines', to='catalog.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'Stock Move Line',
                'verbose_name_plural': 'Stock Move Lines',
                'ordering': ['move', 'product'],
            },
        ),
        migrations.CreateModel(
            name='StockQuant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='quantity')),
                ('reserved_quantity', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='reserved quantity')),
                ('cost_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='cost price')),
                ('total_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='total value')),
                ('lot_number', models.CharField(blank=True, max_length=50, verbose_name='lot number')),
                ('serial_number', models.CharField(blank=True, max_length=50, verbose_name='serial number')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='expiry date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_quants', to='inventory.location', verbose_name='location')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_quants', to='catalog.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'Stock Quantity',
                'verbose_name_plural': 'Stock Quantities',
                'ordering': ['product', 'location'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(help_text='Unique warehouse code', max_length=20, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('address_line1', models.CharField(blank=True, max_length=200, verbose_name='address line 1')),
                ('address_line2', models.CharField(blank=True, max_length=200, verbose_name='address line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('state_province', models.CharField(blank=True, max_length=100, verbose_name='state/province')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_default', models.BooleanField(default=False, help_text='Default warehouse for this company', verbose_name='is default')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='companies.company', verbose_name='company')),
            ],
            options={
                'verbose_name': 'Warehouse',
                'verbose_name_plural': 'Warehouses',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='location',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='inventory.warehouse', verbose_name='warehouse'),
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(help_text='Location code (e.g., A-01-01)', max_length=30, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('barcode', models.CharField(blank=True, max_length=50, verbose_name='barcode')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_scrap_location', models.BooleanField(default=False, help_text='Location for scrapped/damaged goods', verbose_name='is scrap location')),
                ('is_return_location', models.BooleanField(default=False, help_text='Location for returned goods', verbose_name='is return location')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location', verbose_name='parent location')),
                ('location_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.locationtype', verbose_name='location type')),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.warehouse', verbose_name='warehouse')),
            ],
            options={
                'verbose_name': 'historical Location',
                'verbose_name_plural': 'historical Locations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddIndex(
            model_name='stockmove',
            index=models.Index(fields=['company', 'state'], name='inventory_s_company_a2d52f_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmove',
            index=models.Index(fields=['move_type', 'state'], name='inventory_s_move_ty_fe5784_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmove',
            index=models.Index(fields=['scheduled_date'], name='inventory_s_schedul_7867f2_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmove',
            index=models.Index(fields=['source_location'], name='inventory_s_source__627bbe_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmove',
            index=models.Index(fields=['destination_location'], name='inventory_s_destina_3b2d17_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmoveline',
            index=models.Index(fields=['move', 'product'], name='inventory_s_move_id_8b4b53_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmoveline',
            index=models.Index(fields=['product', 'state'], name='inventory_s_product_f4853d_idx'),
        ),
        migrations.AddIndex(
            model_name='stockquant',
            index=models.Index(fields=['product', 'location'], name='inventory_s_product_3e8a54_idx'),
        ),
        migrations.AddIndex(
            model_name='stockquant',
            index=models.Index(fields=['location'], name='inventory_s_locatio_dcffc0_idx'),
        ),
        migrations.AddIndex(
            model_name='stockquant',
            index=models.Index(fields=['lot_number'], name='inventory_s_lot_num_b1efd4_idx'),
        ),
        migrations.AddIndex(
            model_name='stockquant',
            index=models.Index(fields=['serial_number'], name='inventory_s_serial__8f95b9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stockquant',
            unique_together={('product', 'location', 'lot_number', 'serial_number')},
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['company', 'is_active'], name='inventory_w_company_ab385b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='warehouse',
            unique_together={('company', 'code')},
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['warehouse', 'is_active'], name='inventory_l_warehou_aa4cb9_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['location_type'], name='inventory_l_locatio_b01167_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together={('warehouse', 'code')},
        ),
    ]
