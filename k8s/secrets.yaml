# Kubernetes Secrets for ERP System
# Note: In production, these should be created using kubectl or a secret management system
# This file is for reference only - DO NOT commit actual secrets to version control

apiVersion: v1
kind: Secret
metadata:
  name: erp-secrets
  namespace: erp-system
type: Opaque
stringData:
  # Database secrets
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  DATABASE_URL: "postgresql://erp_user:CHANGE_ME_IN_PRODUCTION@postgres-service:5432/erp_db"
  
  # Redis secrets
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  REDIS_URL: "redis://:CHANGE_ME_IN_PRODUCTION@redis-service:6379/0"
  CELERY_BROKER_URL: "redis://:CHANGE_ME_IN_PRODUCTION@redis-service:6379/0"
  CELERY_RESULT_BACKEND: "redis://:CHANGE_ME_IN_PRODUCTION@redis-service:6379/0"
  
  # MinIO secrets
  MINIO_ACCESS_KEY: "CHANGE_ME_IN_PRODUCTION"
  MINIO_SECRET_KEY: "CHANGE_ME_IN_PRODUCTION"
  
  # Django secrets
  DJANGO_SECRET_KEY: "CHANGE_ME_IN_PRODUCTION_VERY_LONG_RANDOM_STRING"
  
  # Email secrets
  EMAIL_HOST: "smtp.company.com"
  EMAIL_HOST_USER: "noreply@company.com"
  EMAIL_HOST_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  DEFAULT_FROM_EMAIL: "ERP System <noreply@company.com>"
  
  # Monitoring secrets
  FLOWER_BASIC_AUTH: "admin:CHANGE_ME_IN_PRODUCTION"
  GRAFANA_ADMIN_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  
  # External services
  SENTRY_DSN: "https://your-sentry-dsn@sentry.io/project-id"
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: erp-system
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    # Base64 encoded Docker registry credentials
    # Create with: kubectl create secret docker-registry registry-secret \
    #   --docker-server=your-registry.com \
    #   --docker-username=your-username \
    #   --docker-password=your-password \
    #   --docker-email=your-email@company.com \
    #   --namespace=erp-system
